{"version":3,"sources":["components/modal.jsx","components/table.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","textfield","width","display","marginLeft","marginRight","marginTop","InputModal","handlePostData","modalIsOpen","setModalOpen","useState","name","username","email","phone","website","userData","setData","classes","handleInput","event","flag","tempData","target","value","Modal","setAppElement","isOpen","className","onRequestClose","action","onSubmit","preventDefault","TextField","onChange","e","required","label","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","hover","TableRow","table","border","BasicTable","passData","deleteData","updateData","id","setId","modalFlag","setModalFlag","userInputData","tempFlag","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","map","user","scope","Button","style","variant","onClick","handleUpdate","App","setUserData","setModalFLag","useEffect","a","axios","get","data","some","postData","post","length","u","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81868e3f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  textfield: {\r\n    width: 200,\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nconst InputModal = ({ handlePostData, modalIsOpen, setModalOpen }) => {\r\n  //let [modalIsOpen, setModalOpen] = useState(true);\r\n  let [userData, setData] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    website: \"\",\r\n  });\r\n  const classes = useStyles();\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // const { data } = await axios.post(\r\n    //   \"https://jsonplaceholder.typicode.com/posts\",\r\n    //   userData\r\n    // );\r\n    // data.id = previousLength + 1;\r\n    //console.log(\"result\", data);\r\n\r\n    handlePostData(userData);\r\n    setModalOpen(false);\r\n  };\r\n  const handleInput = (event, flag) => {\r\n    let tempData = userData;\r\n    if (flag === 1) tempData.name = event.target.value;\r\n    else if (flag === 2) tempData.username = event.target.value;\r\n    else if (flag === 3) tempData.email = event.target.value;\r\n    else if (flag === 4) tempData.phone = event.target.value;\r\n    else tempData.website = event.target.value;\r\n\r\n    setData(tempData);\r\n  };\r\n\r\n  Modal.setAppElement(\"#root\");\r\n\r\n  //console.log(\"state\", modalIsOpen);\r\n  //console.log(modalIsOpenReal);\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        className=\"modal\"\r\n        onRequestClose={() => setModalOpen(false)}\r\n      >\r\n        <form action=\"#\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            onChange={(e) => handleInput(e, 1)}\r\n            className={classes.textfield}\r\n            required\r\n            label=\"Name\"\r\n          />\r\n          <TextField\r\n            onChange={(e) => handleInput(e, 2)}\r\n            className={classes.textfield}\r\n            required\r\n            label=\"Username\"\r\n          />\r\n          <TextField\r\n            onChange={(e) => handleInput(e, 3)}\r\n            className={classes.textfield}\r\n            required\r\n            label=\"Email\"\r\n          />\r\n          <TextField\r\n            onChange={(e) => handleInput(e, 4)}\r\n            className={classes.textfield}\r\n            required\r\n            label=\"Phone\"\r\n          />\r\n          <TextField\r\n            onChange={(e) => handleInput(e, 5)}\r\n            className={classes.textfield}\r\n            required\r\n            label=\"Website\"\r\n          />\r\n          <button className={classes.textfield}>Submit</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputModal from \"./modal\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"90%\",\r\n    border: \"1px solid black\",\r\n    marginTop: 50,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n});\r\n\r\nconst BasicTable = ({ passData, deleteData, updateData }) => {\r\n  const classes = useStyles();\r\n  let [id, setId] = useState();\r\n  let [modalFlag, setModalFlag] = useState(false);\r\n  const handleUpdate = (id, user) => {\r\n    setId(id);\r\n    setModalFlag(true);\r\n  };\r\n\r\n  const postData = (userInputData) => {\r\n    updateData(id, userInputData);\r\n  };\r\n\r\n  const some = (tempFlag) => {\r\n    setModalFlag(tempFlag);\r\n  };\r\n  //console.log(passData);\r\n  return (\r\n    <div>\r\n      <InputModal\r\n        handlePostData={postData}\r\n        modalIsOpen={modalFlag}\r\n        setModalOpen={some}\r\n      />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <StyledTableRow>\r\n              <StyledTableCell>Name</StyledTableCell>\r\n              <StyledTableCell>Username</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>Phone Number</StyledTableCell>\r\n              <StyledTableCell>Website</StyledTableCell>\r\n              <StyledTableCell></StyledTableCell>\r\n            </StyledTableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {passData.map((user) => (\r\n              <StyledTableRow key={user.name}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {user.name}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{user.username}</StyledTableCell>\r\n                <StyledTableCell>{user.email}</StyledTableCell>\r\n                <StyledTableCell>{user.phone}</StyledTableCell>\r\n                <StyledTableCell>{user.website}</StyledTableCell>\r\n                <StyledTableCell>\r\n                  <Button\r\n                    style={{ marginRight: 20 }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => handleUpdate(user.id, user)}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={() => deleteData(user.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicTable;\r\n","import Button from \"@material-ui/core/Button\";\nimport \"./App.css\";\nimport FinalTable from \"./components/table\";\nimport InputModal from \"./components/modal\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nfunction App() {\n  let [userData, setUserData] = useState([]);\n  let [modalFlag, setModalFLag] = useState(false);\n  useEffect(() => {\n    const some = async () => {\n      const { data } = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      setUserData(data);\n    };\n    some();\n  }, []);\n\n  const postData = async (userInputData) => {\n    const { data } = await axios.post(\n      \"https://jsonplaceholder.typicode.com/posts\",\n      userInputData\n    );\n    // let temp = [...userData];\n    // temp.unshift(data);\n    //console.log(\"unnessarypostrequest\");\n    data.id = userData.length + 1;\n    setUserData([data, ...userData]);\n    //setUserData(temp);\n  };\n\n  const deleteData = (id) => {\n    const tempData = userData.filter((user) => user.id !== id);\n    setUserData(tempData);\n  };\n\n  const updateData = (id, data) => {\n    //console.log(\"userData\", userData);\n    // let update = [...userData];\n    // //console.log(\"update Data\", update);\n\n    // let index = update.findIndex((e) => e.id === id);\n    // update[index] = data;\n\n    setUserData((userData) =>\n      userData.map((u) => (u.id === id ? { ...u, ...data } : u))\n    );\n  };\n\n  const some = (tempFlag) => {\n    setModalFLag(tempFlag);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => setModalFLag(true)}\n      >\n        ADD ROW\n      </Button>\n      <InputModal\n        handlePostData={postData}\n        modalIsOpen={modalFlag}\n        setModalOpen={some}\n      />\n      <FinalTable\n        passData={userData}\n        updateData={updateData}\n        deleteData={deleteData}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}